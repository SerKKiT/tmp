events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Логирование
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Сжатие
    gzip on;
    gzip_types text/plain text/css application/javascript application/json;
    gzip_min_length 1000;
    
    # Upstream серверы
    upstream go_app {
        server go-app:8080;
    }
    
    upstream streaming_service {
        server streaming-service:8081;
    }
    
    # ✅ HTTP сервер - редирект на HTTPS
    server {
        listen 80;
        server_name 192.168.3.55 streamapp.hopto.org;
        
        # Редирект всех HTTP запросов на HTTPS
        return 301 https://$host$request_uri;
    }
    
    # ✅ HTTPS сервер - основная конфигурация
    server {
        listen 443 ssl;
        http2 on;
        server_name 192.168.3.55 streamapp.hopto.org;
        
        # ✅ SSL сертификаты (поместите файлы в /opt/streamapp/)
        ssl_certificate /opt/streamapp/server.crt;
        ssl_certificate_key /opt/streamapp/server.key;
        
        # ✅ SSL настройки безопасности
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # ✅ Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # ✅ Проксирование на основное приложение
        location / {
            proxy_pass http://go_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # ✅ HTTPS схема
            
            # Таймауты для стабильности
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ✅ ДОБАВЬТЕ ЭТОТ БЛОК для HLS API
        location /api/hls/ {
            proxy_pass http://streaming_service/api/hls/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto https;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        }

        location /api/streams {
            proxy_pass http://streaming_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto https;
            
            # CORS для API
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
        }

        # ✅ Streaming service API
        location /streaming/ {
            rewrite ^/streaming/(.*)$ /$1 break;
            
            proxy_pass http://streaming_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # ✅ HTTPS схема
            
            # ✅ CORS заголовки
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            
            # Обработка preflight OPTIONS запросов
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # ✅ HLS файлы - прямая раздача статики
        location /hls/ {
            alias /opt/streamapp/hls_output/;  # ✅ Прямой доступ к файлам
            
            # ✅ CORS для HLS файлов
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Range' always;
            
            # Правильные MIME types
            location ~* \.m3u8$ {
                add_header Content-Type application/vnd.apple.mpegurl;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
            
            location ~* \.ts$ {
                add_header Content-Type video/mp2t;
                add_header Cache-Control "max-age=300";
            }
        }
        
        # ✅ Статические файлы
        location /static/ {
            proxy_pass http://go_app;
            proxy_set_header X-Forwarded-Proto https;
            
            location ~* \.(css|js|jpg|png|gif|ico|svg)$ {
                proxy_pass http://go_app;
                add_header Cache-Control "max-age=86400";
            }
        }
        
        # Обработка ошибок
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
